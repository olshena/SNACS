% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makeSNACScall.R
\name{makeHashCall}
\alias{makeHashCall}
\title{Make hash calls}
\usage{
makeHashCall(
  snacsObj,
  backgndThreshold = 0.95,
  cellProportionAboveBackgnd = 0.5,
  cellProportionBelowBackgndMode = 0.6,
  cellProportionForModeDetection = 0.75,
  minClustSize = 2,
  clustComparePValue = 10^-5,
  maxClustSampleSize = Inf,
  clustCompareMethod = c("t", "hotelling"),
  makeHashCallRnd2 = TRUE,
  maxClustSizeRnd2 = 100,
  backgndThresRnd2 = 0.75,
  dataTypeRnd2 = c("euclidean", "sum of squares", "log2 euclidean",
    "log2 sum of squares"),
  cbsAlpha = 0.1
)
}
\arguments{
\item{snacsObj}{SNACSList object}

\item{backgndThreshold}{Numeric. Threshold of the background antibody distribution of a hash above which the antibody will be considered to be expressed in a cell. Default is 0.95. Range is 0-1}

\item{cellProportionAboveBackgnd}{Numeric. Proportion of cells in a cluster that have to have signal above the background of a hash, determined by "backgndThreshold" parameter, for the cluster to be assigned to the hash. Default is 0.5. Range is 0-1}

\item{cellProportionBelowBackgndMode}{Numeric. Maximum proportion of cells which can be below the mode of the estimated hash background distribution. Default is 0.6. Range is 0-1}

\item{cellProportionForModeDetection}{Numeric. Proportion of cells used to estimate mode of the background distribution. Used only if "cellProportionBelowBackgndMode" threshold is not met; otherwise, all cells are used. Default is 0.75. Range is 0-1}

\item{minClustSize}{Numeric. Minimum number of cells required to be in a cluster. Default is 2}

\item{clustComparePValue}{Numeric. P-value threshold to compare cluster pairs. Default is 10^-5}

\item{maxClustSampleSize}{Numeric. Maximum number of cells in a cluster that will be used to compare. If more, then this number of cells will be sampled. Default is Inf}

\item{clustCompareMethod}{Character. Test used to compare clusters. Default is t-test}

\item{makeHashCallRnd2}{Logical. Make second round of hash call to detect narrow multiplet regions. Default is TRUE}

\item{maxClustSizeRnd2}{Integer. Maximum number of cells required to be in a cluster for making second round of hash calls. Default is 100}

\item{backgndThresRnd2}{Numeric. Threshold of the background antibody distribution of a hash above which the antibody will be considered to be expressed in a cell for making second round of hash calls. Default is 0.75. Range is 0-1}

\item{dataTypeRnd2}{Character. Type of data to be used for splitting the cells when making second round of hash calls. Default is euclidean distance of the cells to the cluster means from first round of hash calls}

\item{cbsAlpha}{Numeric. Significance level passed to DNAcopy::segment to for splitting the cells when making second round of hash calls. Default is 0.1}
}
\value{
A SNACSList object
}
\description{
Make hash calls based on mutation and hash antibody data. The cluster information from the mutation data and the hash antibody data are used to make hash calls. Each cell is assigned one of the hash IDs (a single sample) or a set of hash IDs (a multiplet), when it is a mixture of samples. The distribution of the antibody measure of a hash is expected to be a mixture of a background and a foreground signal where the latter signals the presence of antibody for the hash. The clusters based on mutation data give a rough assignment of hash calls. The hash calls are refined by looking at the antibody data of the cells which cluster together. The cell clusters obtained from running "clusterCellsWithSNPdata" are split into sub-clusters and each sub-cluster is assigned a hash ID if enough cells in that group have a signal above the background for the corresponding hash. The sub-clusters are created using the cell clusters from the second round of hierarchical clustering of the mutation data. First the antibody measures of the top two cluster pairs are compared using Hotelling's T2 test. If there is significant difference , the two clusters are splits into sub-clusters and each of those cluster pairs are tested for difference. The tree is traversed until there are no pairs of significantly different cluster pairs. The splitting of a cluster stops when it reaches a minimum number of cells. The singlet and multiplet assignments are made to each of the sub-clusters using the hash antibody data. The antibody expression for a sample is expected to have a bimodal distribution representing a background, which are cells not from the sample, and a foreground, which are cells belonging to the sample. The background distribution is estimated by considering the data from the lower bound till the mode of the background and generating a symmetrical distribution from it. Then, the empirical cumulative distribution function of this distribution becomes the estimated background distribution. A sub-cluster is assigned the ID of each sample which has at least a certain proportion of cells, defined by the parameter "cellProportionAboveBackgnd", with antibody expression above a certain quantile, defined by the parameter "backgndThreshold", of the hash background. A sub-cluster with multiple samples above their corresponding hash background is considered a multiplet. The result is stored in the column "hashCallRnd1" in the "annCell" table of the SNACS object.
The above hash calls are refined by detecting narrow regions of multiplets. The cells, ordered as in the clusters above, are segmented by applying circular binary segmentation (CBS) on the distance to the centroid of the hash call groups. A segment is assigned the ID of each hash which has at least a certain proportion of cells, defined by the parameter "cellProportionAboveBackgnd", with antibody expression above a certain quantile, defined by the parameter "backgndThresRnd2", of the hash background. A segment with multiple hashes above their corresponding hash background is considered a multiplet. Only narrow segments, specified by "maxClustSizeRnd2", are considered. The result is stored in the column "hashCallRnd2" in the "annCell" table of the SNACS object
}
